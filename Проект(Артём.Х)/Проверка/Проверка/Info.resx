<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        FIx0Qs1c0UUgwUUUUAFFFFABQDRRQAUUUUAf/9k=
</value>
  </data>
</root>